
package qimeng;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QiMengWebService", targetNamespace = "http://qimeng/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QiMengWebService {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://qimeng/", className = "qimeng.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://qimeng/", className = "qimeng.HelloResponse")
    @Action(input = "http://qimeng/QiMengWebService/helloRequest", output = "http://qimeng/QiMengWebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param sql
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "excuteSQL", targetNamespace = "http://qimeng/", className = "qimeng.ExcuteSQL")
    @ResponseWrapper(localName = "excuteSQLResponse", targetNamespace = "http://qimeng/", className = "qimeng.ExcuteSQLResponse")
    @Action(input = "http://qimeng/QiMengWebService/excuteSQLRequest", output = "http://qimeng/QiMengWebService/excuteSQLResponse")
    public List<String> excuteSQL(
        @WebParam(name = "sql", targetNamespace = "")
        String sql);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPurchases", targetNamespace = "http://qimeng/", className = "qimeng.ListPurchases")
    @ResponseWrapper(localName = "listPurchasesResponse", targetNamespace = "http://qimeng/", className = "qimeng.ListPurchasesResponse")
    @Action(input = "http://qimeng/QiMengWebService/listPurchasesRequest", output = "http://qimeng/QiMengWebService/listPurchasesResponse")
    public List<String> listPurchases(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param customerId
     * @param productIds
     * @param quantities
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "placeOrder", targetNamespace = "http://qimeng/", className = "qimeng.PlaceOrder")
    @Action(input = "http://qimeng/QiMengWebService/placeOrder")
    public void placeOrder(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "productIds", targetNamespace = "")
        List<String> productIds,
        @WebParam(name = "quantities", targetNamespace = "")
        List<Integer> quantities);

    /**
     * 
     * @param name
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readTable", targetNamespace = "http://qimeng/", className = "qimeng.ReadTable")
    @ResponseWrapper(localName = "readTableResponse", targetNamespace = "http://qimeng/", className = "qimeng.ReadTableResponse")
    @Action(input = "http://qimeng/QiMengWebService/readTableRequest", output = "http://qimeng/QiMengWebService/readTableResponse")
    public List<String> readTable(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
